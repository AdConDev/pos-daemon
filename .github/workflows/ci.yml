name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types: [ opened, synchronize, reopened ]

env:
  GO_VERSION: '1.24'

permissions:
  contents: read
  pull-requests: write
  checks: write
  security-events: write

jobs:
  validate:
    name: Validate Commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            deps
            revert
          requireScope: true
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject must start with lowercase letter.
            Example: "feat(printer): add support for XYZ model"

      - name: Validate commits
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: .commitlintrc.json
          failOnWarnings: true

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        go-version: [ '1.24' ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v5

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      # Fixed: Separate test steps for Unix and Windows
      - name: Run tests (Unix)
        if: runner.os != 'Windows'
        run: |
          go test -v -race ./...
          go test -v -coverprofile=coverage.txt -covermode=atomic ./...
          COVERAGE=$(go tool cover -func=coverage.txt | grep total | awk '{print $3}')
          echo "### ðŸ“Š Test Coverage: $COVERAGE" >> $GITHUB_STEP_SUMMARY

      # Fixed: Proper PowerShell syntax for Windows
      - name: Run tests (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          go test -v -race ./...
          go test -v -coverprofile=coverage.txt -covermode=atomic ./...
          $totalLine = (Get-Content coverage.txt | Select-String -Pattern "total:" | Out-String).Trim()
          $COVERAGE = $totalLine.Split(" ")[-1]
          "### ðŸ“Š Test Coverage: $COVERAGE" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append

      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.3.1
          args: --timeout=5m
          only-new-issues: true

      - name: Go mod tidy check
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum || (echo "::error::Run 'go mod tidy' and commit changes" && exit 1)